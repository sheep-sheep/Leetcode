# Note of Introduction to Algorithm
Dynamic Programming is a special form of divide and conquer method, it's very useful when the subproblems overlap each other.
By using a tabular method, it stores the computed result to accelerate the computation.

DP can be used to find an optimal solution(min or max) or the value of an optimal solution.

There're 4 steps to construct a solution to DP problems:
    1. Characterize the structure of an optimal solution
    2. Recursively build the value of an optimal solution
    3. Compute the value of setp 2 typically in a bottom-up fashion
    4. Construct the solution from computed information


Arrange foreach subproblem to be solved only once, saving its solution. It servers an example of a time-meory trade-off.

1. top down with memoization:need an auxiliary array and a helper routine.
    O(n*n): an n loop with overal all recurisve calls which is an arithmetic serie.
   we can view it as DFS search of the subproblem graph.
   
2. bottom up: natural ordering of the sub-problem.
    O(n*n): double for loops and forms arithmetic series.
    
How do we constructe the actual solutionï¼Ÿ 
Just add another array to keep the optimal solution at current position and return both Aux and AuxSol to caller.



def fib(n):
    if n<=1: return 1
    return fib(n-2) + fib(n-1)


helpMap = {0: 0,
           1: 1}
def fib_dp_topdown(n):
    if n not in helpMap.keys():
        helpMap[n] = fib_dp_topdown(n-1) + fib_dp_topdown(n-2)
    return helpMap[n]


def fib_dp_bottomup(n):
    if n == 0:
        return 0
    else:
        prevVal, currVal = 0, 1
        for _ in range(n):
            fib = prevVal + currVal
            prevVal = currVal
            currVal = fib
    return currVal


Similar solution:
70 Climbing Stairs: it can use both bottom up and top down method
62 Unique Path: it build the table for all possible paths
63 Unique Path II: just skip the obstacles
Rod Cutting problem
Matrix-chain multiplication
    Find the order to do fully parenthezied matrix multiplication which will have the lowest cost.
